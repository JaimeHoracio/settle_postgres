# Properies project with webflux and postgres

spring.application.name=settle-postgres
server.port=8080

# OSIV desactivado
spring.jpa.open-in-view=false

# Postgres
spring.datasource.initialize=true
spring.jpa.hibernate.show-sql=true

# Hibernate ddl auto (create, create-drop, validate, update)
# Desarrollo usar: update
# Produccion usar: validate
spring.jpa.hibernate.ddl-auto= update

spring.datasource.url=jdbc:postgresql://localhost:5433/settledb?createDatabaseIfNotExist=true
spring.datasource.username=postgres
spring.datasource.password=horacio81

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


# Usuario y prefijo autorizado
# No agregar ningun subfijo sin modificar las url permitidas.
app.server.prefix.endpoint=/**
app.server.user.admin.email=horacio@horacio.com
app.server.user.admin.name=Hache
app.server.user.admin.password=12345678

# JWT
app.url.permit.all=/api/hache/auth/signin, /api/hache/auth/signup, /actuator/health, /api/hache/settle/init
app.security.jwt.token.second_exp=1800
app.security.jwt.secret.key=HORACIO_ZAMORA_ALMIRON_PERO_ME_DICEN_HACHE
app.security.host.client.allowed=http://localhost:8100/
app.security.host.operation.allowed=GET, POST, PUT, DELETE, OPTIONS
app.security.host.headers.allowed=Access-Control-Allow-Origin, Access-Control-Allow-Methods, Access-Control-Allow-Headers, Authorization, Content-Type

